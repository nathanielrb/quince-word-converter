<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://svn.code.sf.net/p/algone/code/teibook/teibook.rng" type="application/xml"  schematypens="http://relaxng.org/ns/structure/1.0"?>
<!--<?xml-stylesheet type="text/xsl" href="http://svn.code.sf.net/p/algone/code/teipub/tei2html.xsl"?>-->
<!--odt2tei: 2014-01-30T17:34:31+01:00-->
<TEI xmlns="http://www.tei-c.org/ns/1.0" n="odt2tei" xml:lang="fr"><teiHeader><fileDesc><titleStmt><title>Propriété du document : Titre</title></titleStmt><editionStmt><edition> ?</edition><respStmt><name>Frédéric Glorieux</name><resp> ?</resp></respStmt><respStmt><name/><resp> ?</resp></respStmt></editionStmt><extent><measure quantity="12" unit="page"/><measure quantity="189" unit="paragraph"/><measure quantity="2739" unit="word"/><measure quantity="18059" unit="character"/></extent><publicationStmt><publisher> ?</publisher><date when="2013"/><idno> ?</idno><availability status="restricted"><licence target=" ? ">License ?</licence></availability></publicationStmt><sourceDesc><bibl> ?</bibl></sourceDesc><noteStmt><note type="description">Propriété du document : Commentaires</note></noteStmt></fileDesc><profileDesc><creation><date when=" ? "/></creation><langUsage><language ident="fr"/></langUsage><textClass><keywords><term type="subject">Propriété du document : Sujet</term><term>Propriété du document : Mots-clés</term></keywords></textClass></profileDesc></teiHeader><text><body><pb/><head>Le traitement de textes, 
<lb/>outil de production XML ?</head><head type="sub">Aide-mémoire de fonctionnalités à privilégier dans les modèles de document</head><p>Dernière mise à jour : 2012-11. Création : 2003.</p><p/><p>Ce document bureautique énumère les structures de contenu qui peuvent être extraites d’un fichier traitement de textes vers des formats plus explicites, notamment, XML. Ce texte sert en même temps de recueil de cas épineux afin d’évaluer les solutions technologiques existantes. Ces cas justifient le développement de la librairie odt_tei. L’effet à l’écran n’est pas envisagé pour l’impression, mais comme assistance à la composition électronique.</p><divGen type="toc"/><p/><div><pb/><head>État des outils pour la conversion d’odt vers xml</head><div><head>TEIOO (xsl du TEI consortium pour OpenOffice)</head><p>Le consortium TEI distribue les transformations de Sebastian Rahtz de TEI vers OpenOffice.org, ainsi que d’OpenOffice.org vers TEI, <ref target="http://sourceforge.net/projects/tei/files/TEIOO">TEIOO</ref>. La plupart des cas épineux de ce document ne sont pas pris en compte. Cette transformation convient à des textes simples, avec peu de mise en forme.</p><p rend="b">Avantages</p><list type="ul" rend="•"><item>Officiellement supporté par le consortium TEI</item><item>Processus XML strict, sans expressions régulières</item><item>Sources libres facilement modifiables</item></list><p rend="b">Inconvénients</p><list type="ul" rend="•"><item>La prochaine livraison sera en XSLT 2 (un seul processeur libre, beaucoup moins déployé que XSLT1)</item><item>Perte des mises en forme locales (couleurs, fonds, italique…)</item><item>Pas de régularisation des styles automatiques ou des coupures artificielles</item><item>Pas d’interprétation TEI des styles OpenOffice par défaut (même ceux avec équivalent HTML)</item><item>Pas de regroupement de niveau bloc (ex : listes de définition) ou de niveau caractère (ex : lettres en exposant dans un style utilisateur)</item></list></div><div><head>HTML (OpenOffice.org Writer)</head><p>Comme tous les traitements de textes, OpenOffice peut <hi rend="i">enregistrer sous</hi> HTML 4.0 (et ouvrir les fichiers HTML qu’il a lui même enregistré). Le fichier généré n’est pas xhtml, cet obstacle se contourne pour que le fichier soit transformé en TEI, du moins, pour les informations qui ont été conservées. L'application alerte que des informations seront perdues, elles sont pour nous essentielles. Cependant, l’apparence générale est conservée, ce qui peut suffire à certains besoins.</p><p rend="b">Avantages</p><list type="ul" rend="•"><item>Facile à mettre en œuvre (natif dans l’application)</item><item>Possibilité de correspondance exacte entre éléments HTML et styles</item><item>Rétablissement de certains regroupement &lt;pre&gt;, &lt;dl&gt;</item></list><p rend="b">Inconvénients</p><list type="ul" rend="•"><item>Perte de tous les noms de styles qui n’ont pas de correspondance directe avec un élément HTML</item><item>Perte des petites capitales et des lettres espacées</item><item>Pas de forme normalisée pour les notes en HTML</item><item>HTML <hi rend="i">tagsoup</hi> de présentation, &lt;FONT&gt;, @style, CLASS="WESTERN", &amp;egrave;…</item><item>Code natif au logiciel, impossible à modifier sans recompiler l’application</item></list></div><div><head>xhtml (export OpenOffice)</head><p>OpenOffice peut être complété avec des filtres XML, en import et/ou en export. Cette fonctionnalité déçoit généralement les utilisateurs, car il y a inévitablement perte entre chacune des conversions, mais une fois ces réserves connues, avec des modèles de document arrêtés, la fonctionnalité peut être très intéressante. Le filtre xhtml fait correctement ce que demande habituellement le public, une conservation de l’apparence. Il conserve aussi très strictement tous les artefacts des traitements de texte, notamment la segmentation à chaque événement typographique, sans hiérarchisation. Le grand secret du filtre xhtml est dans une interprétation CSS de tous les styles automatiques, donnant belle allure à l’écran, du moins, tant qu’on ne s’avise pas de regarder la source.</p><p rend="b">Avantages</p><list type="ul" rend="•"><item>Natif dans le logiciel</item><item>XHTML facile à transformer vers TEI ou autre XML</item><item>Base de code modifiable</item></list><p rend="b">Inconvénients</p><list type="ul" rend="•"><item>Perte des styles utilisateurs dans les styles automatiques</item><item>Pas de forme normalisée pour les notes en xhtml</item><item>Perte des petites capitales</item><item>Pas de régularisation de la segmentation</item><item>Pas de regroupements hiérarchiques, même pour des éléments xhtml connus (&lt;pre&gt;, &lt;dl&gt;)</item></list></div><div><head>Abiword</head><p><ref target="http://www.abisource.com/">Abiword</ref> est un traitement de textes léger (pas de nouvelle version de 2010). Son format natif est un XML plus lisible que MS.Word ou OpenOffice.org mais moins complet. Cet outil peut rendre des services, notamment parce qu’il exporte des documents XML convenables. Il souffre cependant des mêmes défauts que tous les traitements de textes, il assure le visible, pas le logique.</p><p rend="b">Avantages</p><list type="ul" rend="•"><item>Léger et multi-plateformes (à la réserve d’un support Mac OS-X limité)</item><item>Formats nativement XML, et assez souvent UTF-8</item><item>Export xhtml avec une bonne distinction entre styles utilisateur et mise en forme locale</item></list><p rend="b">Inconvénients</p><list type="ul" rend="•"><item>Base de code difficile à modifier</item><item>Perte des petites capitales, des lettres espacées, et des marques d’index, dans tous les formats</item><item>Export Docbook, perte des styles utilisateurs (tout devient des &lt;phrase&gt; sans autre précision), section pour le moindre paragraphe stylé en cas d’hypothétiques regroupements.</item><item>Pas de régularisation de la segmentation</item><item>Format confidentiel sur lequel il est déconseillé d’investir des développements</item></list></div></div><div><pb/><head>Titres hiérarchiques</head><p>Les titres hiérarchiques introduisent bien la découverte des styles (Titre 1, Titre 2… Titre 10) car cet encodage permet de générer automatiquement une table des matières. L’arbre des titres doit pouvoir être exigé de tout document bureautique destiné à l’édition électronique, si bien qu’une transformation s’y fiera comme une structure majeure du document. Une conversion automatisée s’appuiera sur les titres et leurs niveaux pour délimiter des sections imbriquées. Attention à ne pas utiliser les styles de titre dans d’autres structures (tables, listes, cadres), sous peine de rompre l’arbre strict des sections.</p><div><head>Titre 2</head><div><head>Titre 3</head></div></div></div><div><pb/><head>Caractères</head><p>L’apparence des caractères peut être modifiée par des styles, avec parfois des noms significatifs, cependant la plupart du temps, les auteurs utilisent des mises en forme locales (italique, exposant, petites capitales, couleurs…), rapidement disponibles avec des raccourcis clavier sans configurations supplémentaires. Les intersections entre ces deux couches de format (exemple : italique et style) introduisent des perturbations difficiles à déjouer automatiquement, d’autant plus que certaines mises en forme typographique définissent des segments qui logiquement en incluent  d’autres (exemple : l’italique peut être utilisé pour des titres, dans lesquels peuvent se trouver des lettres en exposant). Le modèle interne d’un traitement de textes ne conserve pas (ou peu) de hiérarchie à l’intérieur d’un paragraphe. Le texte est stocké comme un flux de caractères, avec une interruption pour chaque modification d’état. Ce modèle suffit à la conservation de l’effet visuel, plus difficilement à reconstruire des segments, or, c’est ce qui est attendu d’un usage structuré du traitement de textes. Si par exemple l’auteur utilise les petites capitales pour distinguer des noms de personne, afin par exemple d’en extraire la liste, alors il faut s’assurer que les segments ne soient pas séparés par des espaces et contiennent aussi des vraies majuscules. Une liste de cas rencontrés énumèrent les continuités et hiérarchies souhaitables à restaurer.</p><div><head>Mises en forme, styles prédéfinis et utilisateur</head><p>Mise en forme de niveau caractère à conserver : <hi rend="sup">exposant</hi>, <hi rend="sub">indice</hi>, <hi rend="sc">Petites Capitales</hi>, <phr rend="ls">lettres espacées</phr>, <hi rend="i">italique</hi>, <hi rend="b">gras</hi>, <hi rend="u">souligné, souligné typé</hi>, <hi rend="color_ff0000">couleur</hi>,  <hi rend="bg_ffff00">surlignage</hi>, modification de la langue.</p><p>Styles prédéfinis de niveau caractère avec un équivalent HTML (OpenOffice) : <emph>Accentuation (Emphasis) html5:&lt;em&gt;</emph>, <hi rend="strong">Accentuation forte (Strong Emphasis) html5:&lt;strong&gt;</hi>, <q>Citation (en:Citation) html5:&lt;cite&gt;</q>, <gloss>Définition (Definition) html5:&lt;dfn&gt;</gloss>, <q>Exemple (Example) html5:&lt;samp&gt;</q>, <code>Saisie de l’utilisateur (User Entry) html5:&lt;kbd&gt;, Texte non proportionnel (Teletype) html5:&lt;tt&gt;, Texte source (Source Text) html5:&lt;code&gt;</code>, <term>Variable (Variable) html5:&lt;var&gt;</term>.</p></div><div><head>Cas difficiles</head><list type="ul" rend="•"><item><hi rend="sc">Petites Capitales interrompues par des Majuscules</hi></item><item>Exposants courants en lettres unicode 1<hi rend="sup">er</hi>, 2<hi rend="sup">e</hi>, Iº, IIª.</item><item>Segment <hi rend="i">italique interrompu pardes espaces droits</hi>.</item><item>Exposant en petites capitales<hi rend="sup">CI</hi>.</item><item><hi rend="color_ff0000"><hi rend="sc">P. Bon</hi>, <hi rend="i">adit.</hi> Col. 67<hi rend="sup">D</hi></hi>.</item><item>Un style “distinct” avec<hi rend="sup">indice</hi> inclus.</item><item>Souligné rassemblant italique et exposant (titre) : <hi rend="u">le <hi rend="i">Quichotte</hi> au <num>xix<hi rend="sup">e</hi></num> siècle</hi>.</item><item>Surlignage utilisé pour réunir plusieurs champs : <hi rend="bg_ffff00"><hi rend="sc">Auteur</hi>, <hi rend="i">titre</hi>, référence<hi rend="sup">C</hi> […]</hi> ; …</item><item>Chiffres romain en <hi rend="sc">petites capitales</hi> : <num>xix<hi rend="sup">e</hi></num>.</item><item><hi rend="i">Un</hi><ref target="http://www.enc.sorbonne.fr/"><seg rend="internetlink">lien</seg><seg rend="internetlink">a</seg><seg rend="internetlink">vec</seg><seg rend="internetlink">typographie</seg><seg rend="internetlink">riche</seg></ref>.(la variation dans le lien ne résiste pas dans Microsoft.word)</item></list></div></div><div><pb/><head>Paragraphes</head><p>Les auteurs considèrent le paragraphe comme une unité de sens importante, cependant ils emploient généralement leur logiciel sans en afficher la marque (¶). Le saut de ligne est rare, beaucoup de paragraphes vides sont employés pour des espacements autour de titres (plutôt que de configurer le format du style concerné). Une transformation automatique saura régulariser ces artefacts généralement inévitables, restent ensuite les limitations du modèle logiciel.</p><p>Un flux de texte est essentiellement une suite de paragraphes, linéaire. Toutefois, lorsque l’on copie/colle depuis le navigateur vers le traitement de textes, ou qu’un document est enregistré pour Internet (HTML), des équivalences entre styles et balises montrent que le logiciel lui-même contourne parfois les limites de son modèle linéaire, en regroupant par exemple les paragraphes d’une citation (&lt;blockquote&gt;) ou les successions des termes et de définition dans une liste (dl/(dt|dd) +). Une transformation automatique doit au moins conserver ces structures, et si possible en prévoir d’autres, autour des styles de paragraphes.</p><p>Les mises en forme manuelles des paragraphes portent généralement peu d’information, sauf conventions locales qu’il conviendrait justement d’étiqueter plus précisément. On distinguera juste les bordures encadrantes (lorsqu’elles sont fusionnées) qui permettent de regrouper plusieurs paragraphes (exemple : cartouche de métadonnées). Pour le reste, on conseillera sans réserve l’usage des styles personnalisés, permettant seuls d’assigner des fonctions précises à des blocs.</p><div><head>Styles prédéfinis</head><byline>Expéditeur (<hi rend="i">Sender</hi>)</byline><p>Standard (<hi rend="i">Standard</hi>)</p><p>Corps de texte (<hi rend="i">Text body</hi>)</p><p rend="addressee">Destinataire (<hi rend="i">Adressee</hi>)</p><quote><p>Citation (<hi rend="i">Quotations</hi>)</p><p>&lt;htm:blockquote&gt;, &lt;tei:quote&gt;</p></quote><list type="gloss"><label/></list><eg>
Texte préformaté (Preformated Text) 
paragraphes sans sauts de ligne

&lt;htm:pre&gt;, &lt;tei:eg&gt;</eg><list type="gloss"><label>En-tête de liste (<hi rend="i">List Heading</hi>)</label><item>Contenu de liste (<hi rend="i">List Content</hi>)</item><label>&lt;htm:dt&gt;, &lt;tei:label&gt;</label><item>&lt;htm:dd&gt;, &lt;tei:item&gt;    
<lb/>&lt;/htm:dl&gt;, &lt;/tei:list&gt;</item></list><p rend="marginalia">Note en marge (<hi rend="i">Marginalia</hi>)</p><p rend="heading">Titre (inter)</p><salute>Formule finale (<hi rend="i">Salutation</hi>)</salute><signed>Signature (<hi rend="i">Signature</hi>)</signed></div><div><head>Mises en forme</head><label rend="center">Paragraphe centré</label><p rend="right">Paragraphe à droite</p><quote rend="border"><p>Blocs réunis</p><quote rend="border"><p>pas un cadre.</p></quote></quote></div><div><pb/><head>Listes (arbres)</head><p>La liste imbriquée est (avec les titres hiérarchiques) une rare structure permettant de représenter un arbre logique (limité à 10 niveaux). Si l’effet visuel se limite à une indentation précédé d’une puce ou d’un numéro, le modèle interne encode très correctement l’imbrication. Un item se limite à un seul paragraphe, les distinctions supplémentaires à l’intérieur d’un item nécessitent une convention particulière (ponctuation, sauts de ligne).</p><list type="ul" rend="•"><item>liste à point</item><item><p>point 2</p><list><item>point 2.1</item><item><p>liste imbriquée ?</p><list><item>et encore</item></list></item><item>2.3</item></list></item><item>3</item></list><list type="ol" rend="1"><item>liste à chiffre</item><item>2</item><item>3</item></list></div><div><pb/><head>Notes (bas, fin, marge)</head><p>Une édition académique s’illustre souvent par la qualité de ses notes, parfois agencées en couches distinctes et parallèles : l’apparat critique qui précise les choix dans l’établissement du texte (variantes, leçons, abréviations…), les éclaircissements historiques (personnes, lieux…), les gloses philologiques… Le traitement de texte est ici mis en défaut, les fonctionnalités automatiques ne permettent pas de rappeler plusieurs fois la même note, même en fin de volume. De plus, les notes en fin de volume ne sont pas toujours faciles à manier, il faut maîtriser le fonctionnement des sections. La numérotation automatique n’est pas obligatoire, il est en théorie possible d’inscrire soi-même un caractère personnalisé, ce moyen peut permettre de dédoublonner certaines notes, mais attention, un code de note sur plusieurs caractères ne sera pas conservé entre différents logiciels. On attirera aussi l’attention sur l’insertion de commentaires (utilisés généralement pour la rédaction collaborative). En combinaison avec un code couleur de surlignage, ils peuvent par exemple servir à la notation de variantes.</p><list type="ul" rend="•"><item>Appel à une note de bas de page (numérotation automatique)<note n="1" place="bottom">Note de bas de page 1)</note>.</item><item>Appel de note de bas de page avec une <hi rend="bg_ffff00 note">portée indiquée par un surlignement<note>Note de bas de page dans un surlignement</note></hi></item><item>Appel à une note de bas de page (choix d’un caractère)<note n="a" place="bottom">Notes de bas de page a)</note>.</item><item>Note numérotée<note n="3" place="bottom">Autre note de bas de page</note></item><item>Un commentaire<note place="margin" resp="Frédéric Glorieux"><!--2009-03-01T21:17:00--><p>Commentaire inséré.</p><p>Saut de ligne.</p><p/><p>Autre paragraphe.</p></note>, un autre combiné avec du surlignage <hi rend="bg_ffff00 note">simple<note><!--2010-03-18T10:22:00-->pas trop complexe </note></hi>, ou <hi rend="u">du soulignement</hi><note place="margin" resp="Frédéric Glorieux"><!--2010-04-03T01:06:53-->Commentaire avec un souligné.</note> (peut permettre d’encoder les variantes d’une édition critique, avec une convention pour les lettres de témoins).</item><item>Note de fin de volume numéroté automatiquement<note n="i" place="end">Note théoriquement en fin de volume qu’un passage par Microsoft.Word peut placer avant un index (création automatique de sections).</note></item></list></div><div><pb/><head>Index</head><p>La composition d’index est une fonctionnalité avancée du traitement de textes, elle demande un peu de familiarisation. Comme pour les notes, l’édition savante conservera des insatisfactions sur le résultat imprimé, ce qui n’empêche pas d’utiliser les outils pour composer des structures de données. Formellement, une entrée d’index est un point dans le texte, pouvant porter un à trois termes (index hiérarchisé). La structure souffre d’un premier inconvénient, elle est peu visible, l’auteur ne voit pas rapidement s’il a par exemple repéré tous les lieux ou personnes. Les index peuvent être utilement complétés par un code couleur de surlignage, permettant non seulement le repérage visuel, mais aussi le balisage des formes dans le texte qui sont rapportées à un terme d’autorité pouvant différer. D’autres inconvénients surgissent à l’usage, notamment lors de la conversion entre Word et OpenOffice, encourageant à la redondance de l’encodage (codes couleurs).</p><list type="ul" rend="•"><item>Entrée d’index<term rend="index" key="Entrée principale"/>.</item><item><term rend="index" key="Expression indexée"/>Expression indexée littéralement, <term rend="index" key="expression"/>autre expression mais modifiée.</item><item>Entrée d’index combinée avec du <hi rend="bg_ffff00">surlignage<term rend="index" key="Surlignement"/></hi>.</item><item>Entrée d’index à 3 niveaux<term rend="index" type="Clé 1" subtype="Clé 2" key="Sous-entrée"/>. (Attention, Microsoft.Word supprime certaines clés intermédiaires inutilisées)</item></list><p rend="indexheading">Index lexical</p><divGen type="index"/></div><div><pb/><head>Tableaux</head><p>Les tableaux peuvent être des structures très complexes (exemple : tableaux insérés dans des cellules fusionnées). On découragera d’abord l’usage du tableau à des fins de présentation (ruse pour assurer la disposition de textes ou d’images). Le tableau est d’abord un alignement de données. Les cellules d’entêtes ne peuvent pas être reconnues sans une information univoque, notamment le style « Titre de tableau ». Le tableau ci-dessous vérifie la conservation des scissions et fusions de cellules. Les différences de bordures ne sont pas prises en compte.</p><p/><table><row role="label"><cell cols="2">A – B (fusionné)</cell><cell>C</cell></row><row><cell>A1</cell><cell rows="3">B1 – B2</cell><cell>C1 (fusionnée puis séparée)</cell></row><row><cell>A2</cell><cell rows="2">C2 (fusionnée puis séparée)</cell></row><row><cell>A2b (scindée)</cell></row><row><cell>A3</cell><cell>B3</cell><cell>C3</cell></row></table></div><div><pb/><head>Structures à explorer</head><p>Les sections précédentes détaillent les structures ayant déjà été utilisées dans des projets éditoriaux, et dont la récupération automatique a été effectivement testée. Suivent ici d’autres fonctionnalités et structures de contenu jugées récupérables, mais dont il faut encore évaluer la fiabilité à l’usage, et le confort pour les auteurs.</p><p rend="figure"><graphic url="odt2tei-img/10000000000003520000014248EDD75B.jpg"/></p><list type="ul" rend="•"><item>renvois et repères de texte</item><item>images et autres fichiers insérés</item><item>champs</item><item>propriétés du document</item><item>document maître</item></list></div><div><pb/><head>Structures à éviter</head><p><figure><p rend="framecontents right">Cadre de texte normalement au milieu d’un paragraphe</p></figure>Les cadres permettent de positionner des objets (textes, images…) avec des coordonnées relatives aux dimensions de la page. On notera d’abord que les utilisateurs se plaignent souvent du manque de stabilité de ces objets au fur et à mesure de la rédaction (exemple : grosse image passant d’une page à l’autre). De plus, il est rare de conserver parfaitement une disposition entre Microsoft.Word et OpenOffice.org. Même si les utilisateurs ont pris l’habitude de tout lui demander, un traitement de texte n’est pas un logiciel de composition graphique, son modèle est fondé sur le flux du texte avec une pagination dynamique, difficile à concilier avec le positionnement des cadres. Leur conversion dans un autre format sera généralement décevante, d’autant plus si l’utilisateur maîtrise mal l’ancrage. Un cadre apparaissant à l’écran dans le premier paragraphe d’une page peut être en réalité être accroché au troisième, rompant la logique voulue par l’auteur.</p><p>Microsoft.Word ne conserve pas certaines structures possibles avec OpenOffice : indexation d’un terme par sélection d’une zone, index avec nom personnalisé, notes avec numérotation personnalisée sur plus d’un caractère.</p><p>Entêtes et pieds de page courants ne sont pas facilement récupérables, et portent généralement une information spécifique de l’imprimé.</p><p>On déconseillera de s’appuyer sur les sections. Elles seraient potentiellement très puissantes, mais plusieurs mise en forme uniquement visuelles en génère automatiquement, comme l’insertion d’une table, ou le colonnage, si bien qu’une structure voulue par un auteur serait perturbée.</p></div><div><pb/><head>Conclusion</head><p>Les logiciels bureautiques souffrent de limites intrinsèques à leur modèle mais restent très confortables. L’exploration systématique des fonctionnalités permet de définir des modèles de documents pour des projets éditoriaux complexes. Toutefois, quelles que soient la conscience des auteurs, ou la finesse des filtres de conversion, il faut admettre et faire comprendre que le seul format pérenne et fiable de cette structure, c’est le texte balisé (XML), que l’on pourra précisément nettoyer et valider contre un schéma.</p></div></div></body></text>
</TEI>
<!--Error recovered in loaded XML document 
DOMDocument::loadXML(): Opening and ending tag mismatch: quote line 228 and div in Entity, line: 234
DOMDocument::loadXML(): Opening and ending tag mismatch: div line 182 and body in Entity, line: 351
DOMDocument::loadXML(): Opening and ending tag mismatch: body line 59 and text in Entity, line: 352
DOMDocument::loadXML(): Opening and ending tag mismatch: text line 58 and TEI in Entity, line: 353
DOMDocument::loadXML(): Premature end of data in tag TEI line 5 in Entity, line: 354
-->
